# DO NOT WRITE THIS FILE
# When chromebrew updates, it may replace this file, wiping out any changes
# you have made.
# Instead, add custom environment variables to env.d/99-custom and
# custom scripting to profile.d/99-custom

function _set_crew_variables () {
  local ARCH="$(uname -m)"
  export LIB_SUFFIX=''
  [ "${ARCH}" = "x86_64" ] && export LIB_SUFFIX='64'

  # Find chromebrew prefix
  # same logic can be found in lib/const.rb, line 17-25
  : "${CREW_PREFIX:=/usr/local}"

  : "${CREW_LIB_PREFIX:=$CREW_PREFIX/lib$LIB_SUFFIX}"

  # Find system configuration directory
  export CREW_SYSCONFDIR="${CREW_PREFIX}/etc"
}
_set_crew_variables

function _glibc_check () {
  # Workaround for if the ChromeOS glibc has been updated from under us
  # by a ChromeOS upgrade.
  crew_installed_glibc_version=$(/usr/bin/jq --arg key glibc -r '.installed_packages[] | select(.name == $key )| .version ' /usr/local/etc/crew/device.json)
  installed_glibc_version=$(/lib"$LIB_SUFFIX"/libc.so.6 | /usr/bin/awk -F version 'NR==1{{gsub (" ", "", $0) ; print substr($2, 1, length($2)-1)}}')
  if [ "$crew_installed_glibc_version" != "$installed_glibc_version" ]; then
    unset LD_LIBRARY_PATH
    /bin/grep .so /usr/local/etc/crew/meta/glibc_lib"${crew_installed_glibc_version//.}".filelist | /bin/grep -v gconv | /usr/bin/xargs /bin/rm -rf
    export LD_LIBRARY_PATH=$CREW_LIB_PREFIX:/lib$LIB_SUFFIX:/usr/lib$LIB_SUFFIX
    crew update ; yes | crew upgrade
  fi
}
_glibc_check

# Bash in path will be the Chromebrew bash if it is installed.
# Switch to Chromebrew bash as early as possible if it is installed.
if [ -x "$CREW_PREFIX/bin/bash" ]; then
  export CREW_BASH_VERSION=$("$CREW_PREFIX"/bin/bash --norc -c "echo \"$BASH_VERSION\"")
  if [ -n "$CREW_BASH_VERSION" ] && [ "${CREW_BASH_VERSION}" != "${BASH_VERSION}" ]; then
    echo "Starting Chromebrew bash."
    exec "$CREW_PREFIX"/bin/bash
  # else
    # echo "Chromebrew bash is not installed."
  fi
fi

# Source the base /etc/profile file
. /etc/profile

# Disable hashing
set +h

# Load the environment
for i in "${CREW_SYSCONFDIR}"/env.d/*; do [ -f "$i" ] && . "${i}"; done

# Load the profile
if [ -d "${CREW_SYSCONFDIR}"/profile.d ]; then
  for i in "${CREW_SYSCONFDIR}"/profile.d/*.sh; do [ -f "$i" ] && . "${i}"; done
fi

# Load the bash directory
if [ -n "${BASH}" ]; then
  for i in "${CREW_SYSCONFDIR}"/bash.d/*; do [ -f "$i" ] && . "${i}"; done
  trap "source ~/.bashrc" USR1
  # Change bash process name to indicate trap has been set.
  echo -n "bash [trap set]" > /proc/$$/comm
fi

# Load the zsh directory
if [ -n "${ZSH_NAME}" ]; then
  for i in "${CREW_SYSCONFDIR}"/zsh.d/*; do [ -f "$i" ] && . "${i}"; done
fi

unset i
