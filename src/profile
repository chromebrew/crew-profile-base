# DO NOT WRITE THIS FILE
# When chromebrew updates, it may replace this file, wiping out any changes
# you have made.
# Instead, add custom environment variables to env.d/99-custom and
# custom scripting to profile.d/99-custom

function _set_crew_variables () {
  # Allow force set of ARCH externally.
  local arch="$(LD_LIBRARY_PATH= /bin/uname -m)"
  local ARCH="${ARCH:=${arch}}"
  export LIB_SUFFIX=''
  [ "${ARCH}" = "x86_64" ] && export LIB_SUFFIX='64'

  # Find chromebrew prefix
  # same logic can be found in lib/const.rb, line 17-25
  : "${CREW_PREFIX:=/usr/local}"
  : "${CREW_LIB_PREFIX:=$CREW_PREFIX/lib$LIB_SUFFIX}"

  # Find system configuration directory
  : "${CREW_SYSCONFDIR:-$CREW_PREFIX/etc}"

  export CREW_PREFIX CREW_LIB_PREFIX CREW_SYSCONFDIR
}

_set_crew_variables

_crew_bash () {
  # Bash in path will be the Chromebrew bash if it is installed.
  # Switch to Chromebrew bash as early as possible if it is installed.
  if [ -x "$CREW_PREFIX/bin/bash" ]; then
    CREW_BASH_VERSION=$(LD_LIBRARY_PATH="$CREW_LIB_PREFIX":/lib$LIB_SUFFIX:/usr/lib$LIB_SUFFIX "$CREW_PREFIX"/bin/bash --norc --version | LD_LIBRARY_PATH= /usr/bin/awk 'NR==1{print $4}')
    if [ -n "$CREW_BASH_VERSION" ] && [ "${CREW_BASH_VERSION}" != "${BASH_VERSION}" ]; then
      echo "Starting Chromebrew bash."
      exec env LD_LIBRARY_PATH="$CREW_LIB_PREFIX":/lib$LIB_SUFFIX:/usr/lib$LIB_SUFFIX "$CREW_PREFIX"/bin/bash -i
    fi
  fi
}
# Parameters passed to a container invocation with bash -c do not get
# here such that they can then be passed to a subshell, so do not exit
# to a subshell if in a container invocation, such as used for the
# Chromebrew PR unit tests, as otherwise the container will block on the
# subshell invocation.
[[ -f /.dockerenv ]] || _crew_bash

# Source the base /etc/profile file
. /etc/profile

# Disable hashing
set +h

# Load the environment
for i in "${CREW_SYSCONFDIR}"/env.d/*; do set -a && [ -f "$i" ] && . "${i}" && set +a; done

# Load the profile
if [ -d "${CREW_SYSCONFDIR}"/profile.d ]; then
  for i in "${CREW_SYSCONFDIR}"/profile.d/*.sh; do [ -f "$i" ] && . "${i}"; done
fi

# Load the bash directory
if [ -n "${BASH}" ]; then
  for i in "${CREW_SYSCONFDIR}"/bash.d/*; do [ -f "$i" ] && . "${i}"; done
  trap "source ~/.bashrc" USR1
  # Change bash process name to indicate trap has been set.
  echo -n "bash [trap set]" > /proc/$$/comm
fi

# Load the zsh directory
if [ -n "${ZSH_NAME}" ]; then
  for i in "${CREW_SYSCONFDIR}"/zsh.d/*; do [ -f "$i" ] && . "${i}"; done
fi

unset i
